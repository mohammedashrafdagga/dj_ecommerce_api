openapi: 3.0.3
info:
  title: ' E-commerce API '
  version: 1.0.0
  description: Building (Onside) ecommerce api using Django and Django Rest Framework
paths:
  /api/accounts/change-password/:
    post:
      operationId: api_accounts_change_password_create
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/accounts/create-account/:
    post:
      operationId: api_accounts_create_account_create
      description: Allow to user to create a new account
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccount'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateAccount'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateAccount'
        required: true
      security:
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAccount'
          description: ''
  /api/accounts/detail/:
    get:
      operationId: api_accounts_detail_retrieve
      description: allow to User to see a lot of detail
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: ''
  /api/accounts/login/:
    post:
      operationId: api_accounts_login_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/accounts/login/refresh/:
    post:
      operationId: api_accounts_login_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/accounts/update/:
    put:
      operationId: api_accounts_update_update
      description: Update User Information
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccount'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateAccount'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateAccount'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAccount'
          description: ''
    patch:
      operationId: api_accounts_update_partial_update
      description: Update User Information
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUpdateAccount'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUpdateAccount'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUpdateAccount'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAccount'
          description: ''
components:
  schemas:
    Account:
      type: object
      properties:
        name:
          type: string
          nullable: true
          maxLength: 255
        email:
          type: string
          format: email
          maxLength: 254
        username:
          type: string
          maxLength: 255
        phone:
          type: string
          nullable: true
          maxLength: 20
        dob:
          type: string
          format: date
          nullable: true
        image:
          type: string
          format: uri
          nullable: true
        address:
          type: string
          nullable: true
      required:
      - email
      - username
    CreateAccount:
      type: object
      properties:
        name:
          type: string
          nullable: true
          maxLength: 255
        email:
          type: string
          format: email
          maxLength: 254
        password:
          type: string
          writeOnly: true
        confirm_password:
          type: string
          writeOnly: true
      required:
      - confirm_password
      - email
      - password
    PatchedUpdateAccount:
      type: object
      properties:
        name:
          type: string
          nullable: true
          maxLength: 255
        phone:
          type: string
          nullable: true
          maxLength: 20
        dob:
          type: string
          format: date
          nullable: true
        image:
          type: string
          format: uri
          nullable: true
        address:
          type: string
          nullable: true
    TokenObtainPair:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - email
      - password
      - refresh
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    UpdateAccount:
      type: object
      properties:
        name:
          type: string
          nullable: true
          maxLength: 255
        phone:
          type: string
          nullable: true
          maxLength: 20
        dob:
          type: string
          format: date
          nullable: true
        image:
          type: string
          format: uri
          nullable: true
        address:
          type: string
          nullable: true
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
